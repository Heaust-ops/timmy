[{"/home/heaust/Projects/timmy/client/src/index.js":"1","/home/heaust/Projects/timmy/client/src/App.js":"2","/home/heaust/Projects/timmy/client/src/reportWebVitals.js":"3","/home/heaust/Projects/timmy/client/src/components/Landing.js":"4","/home/heaust/Projects/timmy/client/src/components/Contexts.js":"5","/home/heaust/Projects/timmy/client/src/components/Organiser.js":"6","/home/heaust/Projects/timmy/client/src/components/Member.js":"7","/home/heaust/Projects/timmy/client/src/components/utils.js":"8"},{"size":500,"mtime":1609416283162,"results":"9","hashOfConfig":"10"},{"size":1662,"mtime":1609416283158,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1609416283162,"results":"12","hashOfConfig":"10"},{"size":3339,"mtime":1609416283158,"results":"13","hashOfConfig":"10"},{"size":304,"mtime":1609416283158,"results":"14","hashOfConfig":"10"},{"size":1811,"mtime":1611707017903,"results":"15","hashOfConfig":"10"},{"size":4124,"mtime":1609416283158,"results":"16","hashOfConfig":"10"},{"size":642,"mtime":1609416283158,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ketgmm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/home/heaust/Projects/timmy/client/src/index.js",[],["38","39"],"/home/heaust/Projects/timmy/client/src/App.js",[],"/home/heaust/Projects/timmy/client/src/reportWebVitals.js",[],"/home/heaust/Projects/timmy/client/src/components/Landing.js",["40","41","42","43","44"],"import axios from \"axios\";\nimport {useState ,useContext} from \"react\";\nimport {\n  organiserCodeContext,\n  partyCodeContext,\n  memberCodeContext,\n  pageContext,\n  memberArrayContext\n} from \"./Contexts\";\n\nfunction Landing() {\n\n  const [clicked, setclicked] = useState(false);\n  const [loading, setloading] = useState(false);\n  const [codeInput, setcodeInput] = useState('');\n  const [warning, setwarning] = useState('');\n  const {organiserCode, setorganiserCode} = useContext(organiserCodeContext);\n  const {partyCode, setpartyCode} = useContext(partyCodeContext);\n  const {memberCode, setmemberCode} = useContext(memberCodeContext);\n  const {page, setpage} = useContext(pageContext);\n  const {memberArray, setmemberArray} = useContext(memberArrayContext);\n\n  const generateCodes = () => {\n    setloading(true);\n    setclicked(true);\n    axios.post(`http://localhost:5000/organiser`, {})\n      .then(res => {\n        setorganiserCode(res.data.organiser);\n        setpartyCode(res.data.party);\n        setloading(false);\n        setpage('organiser');\n      })\n  }\n\n  const getOrganiser = () => {\n    setloading(true);\n    setclicked(true);\n    axios.get('http://localhost:5000/organiser/get/'+codeInput)\n    .then(res => {\n      setorganiserCode(res.data.organiser[0].organiser);\n      setpartyCode(res.data.organiser[0].party);\n      setmemberArray(res.data.members);\n      setloading(false);\n      setpage('organiser');\n    })\n\n  }\n\n  const makeMember = () => {\n    setloading(true);\n    setclicked(true);\n    axios.post('http://localhost:5000/member/'+codeInput, {})\n      .then(res => {\n        setmemberCode(res.data.member);\n        setmemberArray(res.data);\n        setloading(false);\n        setpage('member');\n      })\n  }\n\n  const getMember = () => {\n    setloading(true);\n    setclicked(true);\n    axios.get('http://localhost:5000/member/get/'+codeInput)\n    .then(res => {\n      setmemberCode(res.data.member);\n      setmemberArray(res.data);\n      setloading(false);\n      setpage('member');\n    })\n  }\n\n  return (\n<div style={{margin: \"auto\"}} className=\"Landing\">\n      \n      <h1>Enter the meeting code</h1>\n      <input value={codeInput} onChange={(event) => {setcodeInput(event.target.value)}} style={{fontSize: \"2em\", textAlign: \"center\", borderRadius: \"30%\"}} maxLength=\"12\" size=\"8\" placeholder=\"type here\"></input>\n      <button onClick={\n        () => {\n          if (codeInput.length === 12 && codeInput.startsWith('o')) {\n            getOrganiser();\n          }\n          else if (codeInput.length === 12 && codeInput.startsWith('p')) {\n            makeMember();\n          }\n          else if (codeInput.length === 12 && codeInput.startsWith('m')) {\n            getMember();\n          } else {\n            setwarning('Please input a valid code');\n          }\n\n        }\n      } style={{borderRadius: \"30%\"}}>Go</button>\n      <br/>\n    <h1>{warning}</h1>\n      <h1>OR</h1>\n      <br/>\n     \n      <button onClick={generateCodes} style={{fontSize: \"2em\", borderRadius: \"20%\", display: `${clicked ? 'none' : 'inline'}` }}>Make a new one</button>\n    \n      <img style={{ borderRadius: \"9999999px\", display: `${loading ? 'inline' : 'none'}` }} alt=\"loading\" width=\"10%\" src=\"https://assets.materialup.com/uploads/7763a28e-13d7-4dbc-9347-f6e6e8fadae6/attachment.gif\"/>\n        \n    </div>\n  );\n}\n\nexport default Landing;\n","/home/heaust/Projects/timmy/client/src/components/Contexts.js",[],"/home/heaust/Projects/timmy/client/src/components/Organiser.js",["45","46","47","48","49"],"/home/heaust/Projects/timmy/client/src/components/Member.js",["50"],"import {useContext, useState, useEffect} from 'react';\nimport {\n  memberCodeContext,\n  memberArrayContext\n} from \"./Contexts\";\nimport axios from 'axios';\nimport {arrtominutes, minsToTime} from './utils';\n\nfunction Member(props) {\n\n  const {memberCode, setmemberCode} = useContext(memberCodeContext);\n  const {memberArray, setmemberArray} = useContext(memberArrayContext);\n  const [hoursInit, sethoursInit] = useState(0);\n  const [minutesInit, setminutesInit] = useState(0);\n  const [hoursFinal, sethoursFinal] = useState(0);\n  const [minutesFinal, setminutesFinal] = useState(0);\n  const [humanTimes, sethumanTimes] = useState(new Array(24*12).fill(0));\n\n  const memberRefresh = () => {\n    axios.get('http://localhost:5000/member/get/'+memberCode)\n    .then(res => {\n      setmemberCode(res.data.member);\n      setmemberArray(res.data);\n      const newHuman = arrtominutes(memberArray.timeArray).map(item => {return [minsToTime(- -item[0]), minsToTime(- -item[1])]});\n      sethumanTimes(newHuman);\n    })\n  }\n\n  useEffect(memberRefresh, []);\n\n  const addTime = () => {\n    var newTimeArray = memberArray.timeArray;\n\n    if (60*hoursInit+minutesInit > 60*hoursFinal+minutesFinal) {\n      const tmp1 = hoursFinal;\n      const tmp2 = minutesFinal;\n      sethoursFinal(hoursInit);\n      setminutesFinal(minutesInit);\n      sethoursInit(tmp1);\n      setminutesInit(tmp2);\n    }\n\n    const inMinutesInitBy5 = Math.floor((60*hoursInit+minutesInit)/5);\n    const inMinutesFinalBy5 = Math.floor((60*hoursFinal+minutesFinal)/5);\n    for (let i=inMinutesInitBy5; i<inMinutesFinalBy5; i++) {\n      if (!newTimeArray[i]) {newTimeArray[i] = 1; }\n    }\n\n    const TimeArray = newTimeArray;\n\n    axios.patch('http://localhost:5000/member/time/'+memberCode, {timeArray: TimeArray})\n    .then(res => {\n      memberRefresh();\n    })\n    .catch(err => console.log(err));\n  }\n\n  const resetTime = () => {\n    const blankTimeArray = new Array(24*60/5).fill(0);\n\n\n    axios.patch('http://localhost:5000/member/time/'+memberCode, {timeArray: blankTimeArray})\n    .then(res => {\n      memberRefresh();\n    })\n    .catch(err => console.log(err));\n  }\n\n \n\n  return (\n    <div className=\"Member\">\n            <h1 style={{display: `${memberCode ? 'inline' : 'none'}`}} >Member Code: {memberCode}</h1><br/>\n            <h1 style={{display: `${memberArray ? 'inline' : 'none'}`}} >Member Name: {memberArray.name}</h1><br/>\n            <br/>\n            <br/>\n            <div style={{display: \"flex\", justifyContent: \"space-around\"}}>\n            <div>\n            <h1>From</h1>\n            <h1>Hours: <input value={hoursInit} onChange={(event) => {sethoursInit(Math.abs(event.target.value%24));}} style={{fontSize: \"2rem\", textAlign: \"center\", borderRadius: \"30%\"}} type=\"number\" max={23} min={0} maxLength={2} size={2} step={1} /></h1> \n            <h1>Minutes: <input value={minutesInit} onChange={(event) => {setminutesInit(Math.abs(event.target.value%60));}} style={{fontSize: \"2rem\", textAlign: \"center\", borderRadius: \"30%\"}} type=\"number\" max={55} min={0} maxLength={2} size={2} step={5} /> </h1> \n            </div>\n            <div><br/>\n            <button style={{width: \"100%\"}} onClick={resetTime}>Reset</button><br/>\n            <button style={{width: \"100%\"}} onClick={addTime}>Add</button>\n            <button style={{width: \"100%\"}} onClick={memberRefresh}>Refresh</button>\n            </div>\n            <div>\n            <h1>To</h1>\n            <h1>Hours: <input value={hoursFinal} onChange={(event) => {sethoursFinal(Math.abs(event.target.value%24));}} style={{fontSize: \"2rem\", textAlign: \"center\", borderRadius: \"30%\"}} type=\"number\" max={23} min={0} maxLength={2} size={2} step={1} /></h1> \n            <h1>Minutes: <input value={minutesFinal} onChange={(event) => {setminutesFinal(Math.abs(event.target.value%60));}} style={{fontSize: \"2rem\", textAlign: \"center\", borderRadius: \"30%\"}} type=\"number\" max={55} min={0} maxLength={2} size={2} step={5} /> </h1> \n            </div>\n            </div>\n            <br/>\n  {humanTimes.map(item => <><h2>{item[0]} To {item[1]}</h2><br/></>)}\n\n    </div>\n  );\n}\n\nexport default Member;\n","/home/heaust/Projects/timmy/client/src/components/utils.js",["51","52"],"export const arrtominutes = (arr) => {\n    var minutesarr = [];\n    var tmp = 0;\n    var tmp2 = [];\n    for (let i=0; i<arr.length; i++) {\n        if (arr[i] != tmp) {\n            tmp = - - !tmp;\n            tmp2.push((i*5).toString());\n        }\n    }\n    if (arr[arr.length-1] == 1) tmp2.push((24*60/5).toString())\n    for (let i=0; i<tmp2.length; i+=2) {\n        minutesarr.push([tmp2[i], tmp2[i+1]]);\n    }\n    return minutesarr;\n}\n\nexport const minsToTime = (min) => {\n    let mins = - -min;\n    let h = Math.floor(mins / 60);\n    let m = mins % 60;\n    h = h < 10 ? '0' + h : h;\n    m = m < 10 ? '0' + m : m;\n    return `${h}:${m}`;\n  }",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":17,"column":10,"nodeType":"59","messageId":"60","endLine":17,"endColumn":23},{"ruleId":"57","severity":1,"message":"61","line":18,"column":10,"nodeType":"59","messageId":"60","endLine":18,"endColumn":19},{"ruleId":"57","severity":1,"message":"62","line":19,"column":10,"nodeType":"59","messageId":"60","endLine":19,"endColumn":20},{"ruleId":"57","severity":1,"message":"63","line":20,"column":10,"nodeType":"59","messageId":"60","endLine":20,"endColumn":14},{"ruleId":"57","severity":1,"message":"64","line":21,"column":10,"nodeType":"59","messageId":"60","endLine":21,"endColumn":21},{"ruleId":"57","severity":1,"message":"65","line":12,"column":26,"nodeType":"59","messageId":"60","endLine":12,"endColumn":42},{"ruleId":"57","severity":1,"message":"66","line":13,"column":22,"nodeType":"59","messageId":"60","endLine":13,"endColumn":34},{"ruleId":"57","severity":1,"message":"64","line":14,"column":11,"nodeType":"59","messageId":"60","endLine":14,"endColumn":22},{"ruleId":"57","severity":1,"message":"67","line":14,"column":24,"nodeType":"59","messageId":"60","endLine":14,"endColumn":38},{"ruleId":"68","severity":1,"message":"69","line":39,"column":28,"nodeType":"70","endLine":39,"endColumn":30,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":29,"column":28,"nodeType":"70","endLine":29,"endColumn":30,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":6,"column":20,"nodeType":"76","messageId":"77","endLine":6,"endColumn":22},{"ruleId":"74","severity":1,"message":"78","line":11,"column":27,"nodeType":"76","messageId":"77","endLine":11,"endColumn":29},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'organiserCode' is assigned a value but never used.","Identifier","unusedVar","'partyCode' is assigned a value but never used.","'memberCode' is assigned a value but never used.","'page' is assigned a value but never used.","'memberArray' is assigned a value but never used.","'setorganiserCode' is assigned a value but never used.","'setpartyCode' is assigned a value but never used.","'setmemberArray' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'organiserCode'. Either include it or remove the dependency array.","ArrayExpression",["81"],"React Hook useEffect has missing dependencies: 'memberArray.timeArray', 'memberCode', 'setmemberArray', and 'setmemberCode'. Either include them or remove the dependency array.",["82"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [organiserCode]",{"range":"87","text":"88"},"Update the dependencies array to be: [memberArray.timeArray, memberCode, setmemberArray, setmemberCode]",{"range":"89","text":"90"},[1424,1426],"[organiserCode]",[1039,1041],"[memberArray.timeArray, memberCode, setmemberArray, setmemberCode]"]